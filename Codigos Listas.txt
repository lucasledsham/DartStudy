//ESTUDAR ITERABLE


.INSERT -> ADICIONANDO ITENS EM UMA LISTA NUMA POSICAO ESPECIFICA
  final nomes = ["Rodrigo", "Joao", "Maria", "Guilherme"];
  nomes.insert(0, "Jose");


.ADDALL -> ADICIONANDO MAIS DE UM ITEM AO MESMO TEMPO EM UMA LISTA
  final nomes = ["Rodrigo", "Joao", "Maria", "Guilherme"];
  nomes.addAll(["Pedro", "Lucas", "Matheus"]);



.REMOVEWHERE  -> SE RETORNAR TRUE O ITEM DA LISTA ELE SERA EXCLUIDO
  final numeros = [1, 2, 3, 4];
  numeros.removeWhere((numero) {
  print('Numero procurado $numero');
  return numero == 4;
  });


.FIRST e .LAST -> RETORNA O PRIMEIRO E O ULTIMO ITEM DA LISTA
  final numeros = [1, 2, 3, 4];
  print(numeros.first);
  print(numeros.last);


.GENERATE -> GERANDO LISTAS
  final numerosGerados = List.generate(10, (index) => index + 1); // Gerando lista de 1 a 10
  print(numerosGerados);
  final stringsGerados = List.generate(10, (index) => "Indice ${index +1}"); // Gerando String
  print(stringsGerados);


.FILLED -> ADICIONANDO REPETICOES DE MESMOS ITENS NUMA LISTA
  var repeticoes = List.filled(3, "Lucas");
  print(repeticoes);
  //[Lucas, Lucas, Lucas]
  repeticoes += List.filled(4, "Pedro"); // Adicionando multiplos itens iguais na lista existente
  print(repeticoes);
  //[Lucas, Lucas, Lucas, Pedro, Pedro, Pedro, Pedro]


SPREAD OPERATOR (...) -> JUNTANDO LISTAS
  var listaSpreadB = [4, 5, 6];
  var listaSpreadA = [1, 2, 3, ...listaSpreadB]; // ... + outraLista junta as lista na que voce quer. 
  print(listaSpreadA);
  //[1, 2, 3, 4, 5, 6]


COLLECTION IF -> CONDICIONAL PARA SABER SE ADICIONA OU NAO ITEM NA LISTA
  var promocaoAtiva = true;
  var produtos = [
    "Cerveja", "Refrigerante", "Agua Mineral",
    if (promocaoAtiva) "Suco de Laranja"
  ];
  print(produtos);
  // Cerveja, Refrigerante, Agua Mineral, Suco de Laranja]


.FOREACH ->  ITERA PARA CADA ELEMENTO DE UMA LISTA, REALIZANDO UMA ACAO SOBRE CADA UM DELES
  void main() {
    var numeros = List.generate(10, (index) => index + 1);
    numeros.forEach(print);// Printa os numeros da lista de 1 ate 10
    numeros.forEach(printAcademia); // Chama a funcao printAcaemia sobre cada iteracao, printando numeros 2 ate 11
  }

  void printAcademia (int valor) {
    print(valor + 1);
  }

 
.ANY -> IRA BUSCAR SE ALGUM ITEM DE UMA LISTA E IGUAL AO QUE VOCE QUISER SABER  (ALGUM ITEM)
  final listaBusca = ["Rodrigo", "Joao", "Jose"];
    if (listaBusca.any((nome) => nome == "Joao")) {
      print("Joao encontrado");
    } else {
      print("Joao nao encontrado");
    }


.EVERY -> CONFERE SE TODOS OS ITENS DA LISTA POSSUEM ALGUMA CONDICAO  (TODOS OS ITENS)
  final listaBusca2 = ["Rodrigo", "Joao", "Jose"];
    if (listaBusca2.every((nome) => nome.contains("j"))) {
      print("Todos os nomes tem a letra J");
    } else {
      print("Nem todos os nomes tem a letra j");
    }


.SORT -> ALTERA A ORDENACAO DA LISTA DE ACORDO COM A SUA VONTADE
    var listaParaOrdenacao = [99, 22, 10, 1, 2, 3, 100, 300];
    listaParaOrdenacao.sort(); // Organizou a lista do menor para o maior
    print(listaParaOrdenacao);

    var listaOrdenacaoNomes = ["Otavio", "Joao", "Jose", "Arthur"];
    listaOrdenacaoNomes.sort();// Organizou a lista de nomes por ordem alfabetica
    print(listaOrdenacaoNomes);

    var listaPacientes = [
      "Rodrigo Rahman|37",
      "Lucas Nunes|25",
      "Paulo Cesar|63",
      "Arthur|21",
      "Antonio|8",   
    ];
    listaPacientes.sort((paciente1, paciente2) {
      final pacienteDados1 = paciente1.split("|");
      final pacienteDados2 = paciente2.split("|");
      final idadePac1 = int.parse(pacienteDados1[1]);
      final idadePac2 = int.parse(pacienteDados2[1]);

      if (idadePac1 > idadePac2) {
        return 1;
      } else if( idadePac1 == idadePac2) {
        return 0;
      } else {
        return -1;
      }
    }); //Ordenando por idade menor para maior
    print(listaPacientes);